{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","tableSort","indexCol","currentIndex","target","rowsForSort","querySelectorAll","sort","a","b","first","children","innerText","second","isNaN","parseFloat","slice","localeCompare","replaceAll","isSorted","reverse","forEach","el","append","createInput","labelText","inputName","data","inputtype","label","createElement","innerHTML","setAttribute","min","max","createSelect","arr","isEdit","select","i","length","option","add","toLocaleUpperCase","headName","defaultValue","addEventListener","e","tagName","place","closest","rows","indexOf","row","item","classList","remove","firstElementChild","value","cell","columnNum","selection","window","getSelection","range","createRange","trim","contentEditable","selectNodeContents","removeAllRanges","addRange","cityList","cityIndex","options","selected","pushNotification","cellContent","toLocaleString","eventCell","key","blur","addEmployForm","formButton","action","method","preventDefault","newRow","cloneNode","rowLength","insertCell","inputValue","name","text","lastElementChild","currentTarget","reset","body","posTop","posRight","title","desc","type","notification","notificationTitle","notificationText","x","documentElement","clientWidth","prevNot","elementFromPoint","Ycoord","setPositionTop","elem","getBoundingClientRect","height","style","top","setTimeout"],"mappings":"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","file":"main.40f5cf02.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = document.querySelector('tbody');\n\ntbody.isSorted = false;\ntbody.currentIndex = 0;\ntbody.headName = 'name';\ntbody.defaultValue = null;\n\nfunction tableSort(indexCol = tbody.currentIndex, target = false) {\n  const rowsForSort = [...tbody.querySelectorAll('tr')];\n\n  rowsForSort.sort((a, b) => {\n    const first = a.children[indexCol].innerText;\n    const second = b.children[indexCol].innerText;\n\n    if (isNaN(parseFloat(first.slice(1)))) {\n      return first.localeCompare(second);\n    } else {\n      if (first.slice(0, 1) === '$') {\n        const z = parseFloat(first.slice(1).replaceAll(',', ''));\n        const x = parseFloat(second.slice(1).replaceAll(',', ''));\n\n        return z - x;\n      }\n\n      return parseFloat(first) - parseFloat(second);\n    }\n  });\n\n  if (tbody.isSorted && target) {\n    rowsForSort.reverse().forEach((el) => tbody.append(el));\n    tbody.isSorted = false;\n  } else {\n    rowsForSort.forEach((el) => tbody.append(el));\n    tbody.isSorted = true;\n  }\n}\n\ntable.addEventListener('click', (e) => {\n  if (e.target.tagName === 'TH') {\n    const place = e.target.closest('thead') ? 0 : table.rows.length - 1;\n\n    tbody.currentIndex = [...table.rows[place].children].indexOf(e.target);\n    tbody.headName = table.rows[place].children[tbody.currentIndex].innerText;\n\n    tableSort(tbody.currentIndex, e.target.isSorted);\n    e.target.isSorted = !e.target.isSorted;\n  }\n});\n\ntbody.addEventListener('click', (e) => {\n  const row = e.target.closest('TR');\n  const rowsForSort = [...tbody.querySelectorAll('tr')];\n\n  rowsForSort.forEach((item) => item.classList.remove('active'));\n  row.classList.add('active');\n\n  if (!e.target.closest('select')) {\n    [...tbody.rows].forEach((el, i) => {\n      if (el.children[2].firstElementChild) {\n        el.children[2].innerText = el.children[2].firstElementChild.value;\n      }\n    });\n  };\n});\n\ntbody.addEventListener('dblclick', (e) => {\n  if (e.target.tagName === 'TD') {\n    const cell = e.target;\n    const columnNum = [...cell.closest('TR').children].indexOf(cell);\n    const selection = window.getSelection();\n    const range = document.createRange();\n\n    tbody.defaultValue = cell.innerText.trim();\n    tbody.headName = table.rows[0].children[columnNum].innerText;\n    cell.contentEditable = true;\n    range.selectNodeContents(cell);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    if (columnNum === 2) {\n      const select = createSelect(cityList, 'office', true);\n      const cityIndex = cityList.indexOf(tbody.defaultValue);\n\n      select.options[cityIndex].selected = true;\n      cell.innerText = '';\n      select.classList.add('cell-input');\n      cell.append(select);\n      cell.contentEditable = false;\n\n      cell.addEventListener('change', () => {\n        cell.innerText = cell.firstElementChild.value;\n\n        pushNotification(\n          10,\n          10,\n          `${tbody.headName}`,\n          `New ${tbody.headName} is added to table.\\n `,\n          'success'\n        );\n      });\n    }\n\n    cell.addEventListener('blur', () => {\n      const cellContent = cell.innerText.trim();\n\n      if (columnNum === 4 && cellContent.slice(0, 1) !== '$') {\n        if (!isNaN(parseFloat(cellContent))) {\n          cell.innerText = `$${(parseFloat(cellContent)).toLocaleString('en')}`;\n\n          pushNotification(\n            10,\n            10,\n            `${tbody.headName}`,\n            `New ${tbody.headName} is added to table.\\n `,\n            'success'\n          );\n        } else {\n          cell.innerText = tbody.defaultValue;\n\n          pushNotification(\n            10,\n            10,\n            `${tbody.headName}`,\n            `New ${tbody.headName} is not correct.\\n `,\n            'error'\n          );\n        }\n      }\n\n      if (columnNum === 3) {\n        if (+cellContent > 90\n            || +cellContent < 18\n            || isNaN(cellContent)) {\n          cell.innerText = tbody.defaultValue;\n\n          pushNotification(\n            10,\n            10,\n            `${tbody.headName}`,\n            `New ${tbody.headName} is not correct.\\n `,\n            'error'\n          );\n        } else if (tbody.defaultValue !== cellContent) {\n          pushNotification(\n            10,\n            10,\n            `${tbody.headName}`,\n            `New ${tbody.headName} is added to table.\\n `,\n            'success'\n          );\n        }\n      }\n\n      if (columnNum === 0 || columnNum === 1) {\n        if (!isNaN(parseFloat(cellContent))) {\n          cell.innerText = tbody.defaultValue;\n\n          pushNotification(\n            10,\n            10,\n            `${tbody.headName}`,\n            `New ${tbody.headName} string is not correct.\\n `,\n            'error'\n          );\n        } else if (tbody.defaultValue !== cellContent && cellContent) {\n          pushNotification(\n            10,\n            10,\n            `${tbody.headName}`,\n            `New ${tbody.headName} is added to table.\\n `,\n            'success'\n          );\n        }\n      }\n\n      if (!cellContent) {\n        cell.innerText = tbody.defaultValue;\n      }\n      cell.contentEditable = false;\n    });\n\n    cell.addEventListener('keydown', eventCell => {\n      if (eventCell.key === 'Enter') {\n        cell.blur();\n      };\n    });\n  }\n});\n\nfunction createInput(labelText, inputName, data, inputtype = 'text') {\n  const label = document.createElement('LABEL');\n\n  label.innerHTML = `${labelText}`\n                    + `<input name =${inputName} `\n                    + `type=${inputtype} `\n                    + `data-qa=${data} required></input>`;\n  label.setAttribute('for', inputName);\n\n  if (inputName === 'name' || inputName === 'position') {\n    label.children[0].setAttribute('minlength', 4);\n  }\n\n  if (inputName === 'age') {\n    label.children[0].min = '18';\n    label.children[0].max = '90';\n  }\n\n  if (inputName === 'salary') {\n    label.children[0].min = '0';\n  }\n\n  return label;\n}\n\nfunction createSelect(arr, data, isEdit = false) {\n  const label = document.createElement('LABEL');\n  const select = document.createElement('SELECT');\n\n  for (let i = 0; i < arr.length; i++) {\n    const option = document.createElement('OPTION');\n\n    option.innerText = arr[i];\n    select.add(option, select[i]);\n  }\n\n  select.setAttribute('data-qa', data);\n\n  if (!isEdit) {\n    label.innerText = data[0].toLocaleUpperCase() + data.slice(1) + ':';\n    label.append(select);\n\n    return label;\n  }\n\n  return select;\n}\n\nconst addEmployForm = document.createElement('FORM');\nconst formButton = document.createElement('BUTTON');\n\nconst cityList = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\naddEmployForm.classList.add('new-employee-form');\naddEmployForm.action = '#';\naddEmployForm.method = 'GET';\nformButton.innerText = 'Save to table';\n\naddEmployForm.append(createInput('Name:', 'name', 'name'));\naddEmployForm.append(createInput('Position:', 'position', 'position'));\naddEmployForm.append(createSelect(cityList, 'office'));\naddEmployForm.append(createInput('Age:', 'age', 'age', 'number'));\naddEmployForm.append(createInput('Salary:', 'salary', 'salary', 'number'));\naddEmployForm.append(formButton);\n\naddEmployForm.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const newRow = tbody.rows[0].cloneNode();\n  const rowLength = tbody.rows[0].children.length;\n\n  for (let i = 0; i < rowLength; i++) {\n    const cell = newRow.insertCell(i);\n    const inputValue = e.target[i].value.trim();\n\n    if (!inputValue || (!isNaN(inputValue) && i < 2)) {\n      pushNotification(\n        10,\n        10,\n        `Failed ${e.target[i].name}`,\n        `Please input correct ${e.target[i].name}.\\n `,\n        'error'\n      );\n\n      return;\n    }\n\n    cell.innerText = inputValue;\n  }\n\n  const text = `$${(+newRow.lastElementChild.innerText).toLocaleString('en')}`;\n\n  newRow.lastElementChild.innerText = text;\n  tbody.append(newRow);\n  e.currentTarget.reset();\n\n  pushNotification(\n    150,\n    10,\n    `Worker`,\n    `${newRow.children[0].innerText} is added to table.\\n `,\n    'success'\n  );\n});\n\ndocument.body.append(addEmployForm);\n\nconst pushNotification = (posTop, posRight, title, desc, type) => {\n  const notification = document.createElement('DIV');\n  const notificationTitle = document.createElement('H2');\n  const notificationText = document.createElement('P');\n  const x = document.documentElement.clientWidth - 50;\n  const y = 50;\n  const prevNot = document.elementFromPoint(x, y).closest('.notification');\n  let Ycoord = 10;\n\n  document.querySelectorAll(`.${title}-show`).forEach(el => {\n    el.classList.remove(`${title}-show`);\n    el.remove();\n  });\n\n  notificationTitle.innerText = title;\n  notificationText.innerText = desc;\n  notification.append(notificationTitle);\n  notification.append(notificationText);\n  notification.classList.add('notification');\n  notification.classList.add(`${title}-show`);\n\n  function setPositionTop(elem) {\n    if (elem) {\n      Ycoord += elem.getBoundingClientRect().height + 20;\n\n      const a = document.elementFromPoint(x, Ycoord).closest('.notification');\n\n      setPositionTop(a);\n    } else {\n      notification.style.top = `${Ycoord + 10}px`;\n    }\n  };\n\n  setPositionTop(prevNot);\n\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n};\n"]}